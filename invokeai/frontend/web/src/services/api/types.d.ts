import { components } from './schema';

type schemas = components['schemas'];

/**
 * Types from the API, re-exported from the types generated by `openapi-typescript`.
 */

// Images
export type ImageDTO = schemas['ImageDTO'];
export type BoardDTO = schemas['BoardDTO'];
export type BoardChanges = schemas['BoardChanges'];
export type ImageChanges = schemas['ImageRecordChanges'];
export type ImageCategory = schemas['ImageCategory'];
export type ResourceOrigin = schemas['ResourceOrigin'];
export type ImageField = schemas['ImageField'];
export type OffsetPaginatedResults_BoardDTO_ =
  schemas['OffsetPaginatedResults_BoardDTO_'];
export type OffsetPaginatedResults_ImageDTO_ =
  schemas['OffsetPaginatedResults_ImageDTO_'];

// Models
export type ModelType = schemas['ModelType'];
export type BaseModelType = schemas['BaseModelType'];
export type PipelineModelField = schemas['PipelineModelField'];
export type ModelsList = schemas['ModelsList'];

// Graphs
export type Graph = schemas['Graph'];
export type Edge = schemas['Edge'];
export type GraphExecutionState = schemas['GraphExecutionState'];

// General nodes
export type CollectInvocation = schemas['CollectInvocation'];
export type IterateInvocation = schemas['IterateInvocation'];
export type RangeInvocation = schemas['RangeInvocation'];
export type RandomRangeInvocation = schemas['RandomRangeInvocation'];
export type RangeOfSizeInvocation = schemas['RangeOfSizeInvocation'];
export type InpaintInvocation = schemas['InpaintInvocation'];
export type ImageResizeInvocation = schemas['ImageResizeInvocation'];
export type RandomIntInvocation = schemas['RandomIntInvocation'];
export type CompelInvocation = schemas['CompelInvocation'];

// ControlNet Nodes
export type ControlNetInvocation = schemas['ControlNetInvocation'];
export type CannyImageProcessorInvocation =
  schemas['CannyImageProcessorInvocation'];
export type ContentShuffleImageProcessorInvocation =
  schemas['ContentShuffleImageProcessorInvocation'];
export type HedImageProcessorInvocation =
  schemas['HedImageProcessorInvocation'];
export type LineartAnimeImageProcessorInvocation =
  schemas['LineartAnimeImageProcessorInvocation'];
export type LineartImageProcessorInvocation =
  schemas['LineartImageProcessorInvocation'];
export type MediapipeFaceProcessorInvocation =
  schemas['MediapipeFaceProcessorInvocation'];
export type MidasDepthImageProcessorInvocation =
  schemas['MidasDepthImageProcessorInvocation'];
export type MlsdImageProcessorInvocation =
  schemas['MlsdImageProcessorInvocation'];
export type NormalbaeImageProcessorInvocation =
  schemas['NormalbaeImageProcessorInvocation'];
export type OpenposeImageProcessorInvocation =
  schemas['OpenposeImageProcessorInvocation'];
export type PidiImageProcessorInvocation =
  schemas['PidiImageProcessorInvocation'];
export type ZoeDepthImageProcessorInvocation =
  schemas['ZoeDepthImageProcessorInvocation'];

// Node Outputs
export type ImageOutput = schemas['ImageOutput'];
export type MaskOutput = schemas['MaskOutput'];
export type PromptOutput = schemas['PromptOutput'];
export type IterateInvocationOutput = schemas['IterateInvocationOutput'];
export type CollectInvocationOutput = schemas['CollectInvocationOutput'];
export type LatentsOutput = schemas['LatentsOutput'];
export type GraphInvocationOutput = schemas['GraphInvocationOutput'];
