name: Test Invoke with Conda
on:
  push:
    branches:
      - 'main'
      - 'development'
      - 'use-bearer-token-to-download-model-debug'
  pull_request_target:
    branches:
      - 'main'
      - 'development'

jobs:
  matrix:
    strategy:
      fail-fast: false
      matrix:
        stable-diffusion-model:
          - 'https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/resolve/main/sd-v1-4.ckpt'
          - 'https://huggingface.co/runwayml/stable-diffusion-v1-5/resolve/main/v1-5-pruned-emaonly.ckpt'
        os:
          - ubuntu-latest
          - macos-latest
        include:
          - os: ubuntu-latest
            environment-file: environment.yml
            default-shell: bash -l {0}
          - os: macos-latest
            environment-file: environment-mac.yml
            default-shell: bash -l {0}
          - stable-diffusion-model: https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/resolve/main/sd-v1-4.ckpt
            stable-diffusion-model-dl-path: models/ldm/stable-diffusion-v1/model.ckpt
            stable-diffusion-model-switch: stable-diffusion-1.4
          - stable-diffusion-model: https://huggingface.co/runwayml/stable-diffusion-v1-5/resolve/main/v1-5-pruned-emaonly.ckpt
            stable-diffusion-model-dl-path: models/ldm/stable-diffusion-v1/v1-5-pruned-emaonly.ckpt
            stable-diffusion-model-switch: stable-diffusion-1.5
    name: Test invoke.py on ${{ matrix.os }} with ${{ matrix.stable-diffusion-model }}
    runs-on: ${{ matrix.os }}
    env:
      CONDA_ENV_NAME: invokeai
    defaults:
      run:
        shell: ${{ matrix.default-shell }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Cache conda packages
        uses: actions/cache@v3
        with:
          path: ~/conda_pkgs_dir
          key: conda-pkgs-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles(matrix.environment-file) }}

      - name: Activate Conda Env
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ env.CONDA_ENV_NAME }}
          environment-file: ${{ matrix.environment-file }}
          miniconda-version: latest

      - name: set test prompt to main branch validation
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "TEST_PROMPTS=tests/preflight_prompts.txt" >> $GITHUB_ENV

      - name: set test prompt to development branch validation
        if: ${{ github.ref == 'refs/heads/development' }}
        run: echo "TEST_PROMPTS=tests/dev_prompts.txt" >> $GITHUB_ENV

      - name: set test prompt to Pull Request validation
        if: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/development' }}
        run: echo "TEST_PROMPTS=tests/validate_pr_prompt.txt" >> $GITHUB_ENV

      - name: Use Cached ${{ matrix.stable-diffusion-model-switch }}
        id: cache-stable-diffusion-model
        uses: actions/cache@v3
        env:
          cache-name: cache-sd-${{ matrix.stable-diffusion-model }}
        with:
          path: ${{ matrix.stable-diffusion-model-dl-path }}
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: Download ${{ matrix.stable-diffusion-model-switch }}
        if: ${{ steps.cache-stable-diffusion-model.outputs.cache-hit != 'true' }}
        run: |
          [[ -d models/ldm/stable-diffusion-v1 ]] \
            || mkdir -p models/ldm/stable-diffusion-v1
          curl \
            -H "Authorization: Bearer ${{ secrets.HUGGINGFACE_TOKEN }}" \
            -o ${{ matrix.stable-diffusion-model-dl-path }} \
            -L ${{ matrix.stable-diffusion-model }}

      # - name: Use Cached Huggingface and Torch models
      #   id: cache-hugginface-torch
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-hugginface-torch
      #   with:
      #     path: ~/.cache
      #     key: ${{ env.cache-name }}
      #     restore-keys: |
      #       ${{ env.cache-name }}-${{ hashFiles('scripts/preload_models.py') }}

      # - name: run preload_models.py
      #   run: python scripts/preload_models.py

      - name: Run the tests
        run: |
          echo "!switch ${{ matrix.stable-diffusion-model-switch }}" > testprompts.txt
          cat ${{ env.TEST_PROMPTS }} >> testprompts.txt
          time python scripts/invoke.py \
            --from_file testprompts.txt

      - name: export conda env
        run: |
          mkdir -p outputs/img-samples
          conda env export --name ${{ env.CONDA_ENV_NAME }} > outputs/img-samples/environment-${{ runner.os }}.yml

      - name: Archive results
        uses: actions/upload-artifact@v3
        with:
          name: results_${{ matrix.os }}_${{ matrix.stable-diffusion-model-switch }}
          path: outputs/img-samples
